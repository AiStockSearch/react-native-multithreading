import groovy.json.JsonSlurper

def getExtOrDefault(name, defaultValue) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : defaultValue
}

buildscript {
  // The Android Gradle plugin is only required when opening the android folder stand-alone.
  // This avoids unnecessary downloads and potential conflicts when the library is included as a
  // module dependency in an application project.
  if (project == rootProject) {
    repositories {
      google()
      jcenter()
    }
    dependencies {
      classpath 'com.android.tools.build:gradle:4.1.2'
    }
  }
}

apply plugin: 'com.android.library'

android {
  compileSdkVersion getExtOrDefault('compileSdkVersion', 28)

  defaultConfig {
    minSdkVersion getExtOrDefault('minSdkVersion', 16)
    targetSdkVersion getExtOrDefault('targetSdkVersion', 28)

    externalNativeBuild {
      cmake {
        cppFlags "-O2 -frtti -fexceptions -Wall -fstack-protector-all"
        abiFilters 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
        arguments "-DRN_ANDROID_ROOT_DIR=" + rootDir
      }
    }
  }

  lintOptions{
    abortOnError false
  }

  externalNativeBuild {
    cmake {
      path "CMakeLists.txt"
    }
  }

  packagingOptions {
    // remove shared libraries
    excludes = ["**/libjsc.so", "**/libjscexecutor.so", "**/libreanimated.so"]
  }
}

repositories {
  google()
  maven {
    // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
    url "$rootDir/../node_modules/react-native/android"
  }
  jcenter()
}

dependencies {
  //noinspection GradleDynamicVersion
  implementation 'com.facebook.react:react-native:+'
  //implementation project(':react-native-reanimated')
}


task extractSo(type: Copy) {
  // rn
  def rnAAR = fileTree("${rootDir}/../node_modules/react-native/android").matching({ it.include "**/**/*.aar" }).singleFile
  def aarSo = zipTree(rnAAR).matching({ it.include "**/*.so" })
  copy {
    from(aarSo)
    into("ndk-deps/rn")
    includeEmptyDirs(false)
  }

  // jsc

  def jscAAR = fileTree("${rootDir}/../node_modules/jsc-android/dist/org/webkit/android-jsc").matching({ it.include "**/**/*.aar" }).singleFile
  def jscSo = zipTree(jscAAR).matching({ it.include "**/*.so" })
  copy {
    from(jscSo)
    into("ndk-deps/jsc")
    includeEmptyDirs(false)
  }

  // reanimated

  def inputFile = new File(rootDir, '../node_modules/react-native/package.json')
  def json = new JsonSlurper().parseText(inputFile.text)
  def reactNativeVersion = json.version as String
  def (major, minor, patch) = reactNativeVersion.tokenize('.')

  def raAAR = "${rootDir}/../node_modules/react-native-reanimated/android/react-native-reanimated-${minor}.aar"
  def raSo = zipTree(raAAR).matching({ it.include "**/*.so" })
  copy {
    from(raSo)
    into("ndk-deps/reanimated")
    includeEmptyDirs(false)
  }

}
preBuild.dependsOn extractSo
